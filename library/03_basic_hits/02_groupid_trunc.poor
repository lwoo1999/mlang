

define inductively groupoid_trunc(A: type): type = sum {
  case in(a: A)
  case squash(#x #y: groupoid_trunc(A), #p #q: x ≡ y, r s: p ≡ q, k j i: I
       |~k: r(j, i)
       | k: s(j, i)
       |~j: p(i)
       | j: q(i)
       |~i: x
       | i: y
       )
}


define pointed_groupoid_trunc(p: pointed): pointed = make(groupoid_trunc(p.A).in(p.center))